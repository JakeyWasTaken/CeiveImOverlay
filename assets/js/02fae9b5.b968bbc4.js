"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>v});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(r),y=a,v=m["".concat(c,".").concat(y)]||m[y]||s[y]||o;return r?t.createElement(v,l(l({ref:n},p),{},{components:r})):t.createElement(v,l({ref:n},p))}));function v(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=y;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},24948:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=r(87462),a=(r(67294),r(3905));const o={},l="CeiveImOverlay",i={type:"mdx",permalink:"/CeiveImOverlay/",source:"@site/pages/index.md",title:"CeiveImOverlay",description:"CeiveImOverlay is a quick and easy way of creating a debug overlay for miscellaneous information. No need to create your own ui or keep track of connections, simply call 3 functions and you have all the information you could ever need.",frontMatter:{}},c=[],u={toc:c},p="wrapper";function m(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ceiveimoverlay"},"CeiveImOverlay"),(0,a.kt)("p",null,"CeiveImOverlay is a quick and easy way of creating a debug overlay for miscellaneous information. No need to create your own ui or keep track of connections, simply call 3 functions and you have all the information you could ever need."),(0,a.kt)("p",null,"A basic integration of CeiveImOverlay would be as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local RunService = game:GetService("RunService")\nlocal CeiveImOverlay = require(...)\nlocal ImOverlay = CeiveImOverlay.new()\n\nImOverlay.BackFrame.Parent = AScreenGui\n\n-- Could be heartbeat or render stepped, doesnt really matter.\nRunService.RenderStepped:Connect(function()\n    ImOverlay:Text("Hello World!")\n\n    ImOverlay:Render()\nend)\n')),(0,a.kt)("p",null,"Which would result in this:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"https://github.com/JakeyWasTaken/CeiveImOverlay/blob/main/docs/assets/basic_example.png?raw=true"})),(0,a.kt)("p",null,"A more complex integration could look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local RunService = game:GetService("RunService")\nlocal CeiveImOverlay = require(...)\nlocal ImOverlay = CeiveImOverlay.new()\n\nImOverlay.BackFrame.Parent = AScreenGui\n\n-- Could be heartbeat or render stepped, doesnt really matter.\nRunService.RenderStepped:Connect(function()\n    for i = 1, 10 do\n        ImOverlay:Begin(`Recursive {i}`)\n    end\n\n    ImOverlay:Text("Im ontop of the world!")\n\n    for _ = 1, 10 do\n        ImOverlay:End()\n    end\n\n    ImOverlay:Render()\nend)\n')),(0,a.kt)("p",null,"Which would result in this:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"https://github.com/JakeyWasTaken/CeiveImOverlay/blob/main/docs/assets/complex_example.png?raw=true"})))}m.isMDXComponent=!0}}]);