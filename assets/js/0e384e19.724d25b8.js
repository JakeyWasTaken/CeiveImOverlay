"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>d});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),y=a,d=p["".concat(c,".").concat(y)]||p[y]||m[y]||o;return n?t.createElement(d,l(l({ref:r},u),{},{components:n})):t.createElement(d,l({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},59881:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var t=n(87462),a=(n(67294),n(3905));const o={},l="Intro",i={unversionedId:"intro",id:"intro",title:"Intro",description:"CeiveImOverlay is a quick and easy way of creating a debug overlay for miscellaneous information. No need to create your own ui or keep track of connections, simply call 3 functions and you have all the information you could ever need.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/CeiveImOverlay/docs/intro",draft:!1,editUrl:"https://github.com/JakeyWasTaken/CeiveImOverlay/edit/master/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},c={},s=[],u={toc:s},p="wrapper";function m(e){let{components:r,...n}=e;return(0,a.kt)(p,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"intro"},"Intro"),(0,a.kt)("p",null,"CeiveImOverlay is a quick and easy way of creating a debug overlay for miscellaneous information. No need to create your own ui or keep track of connections, simply call 3 functions and you have all the information you could ever need."),(0,a.kt)("p",null,"The BackFrame has to be re-parented to a screen gui for CeiveImOverlay to work."),(0,a.kt)("p",null,"A basic integration of CeiveImOverlay would be as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local RunService = game:GetService("RunService")\nlocal CeiveImOverlay = require(...)\nlocal ImOverlay = CeiveImOverlay.new()\n\nImOverlay.BackFrame.Parent = AScreenGui\n\n-- Could be heartbeat or render stepped, doesnt really matter.\nRunService.RenderStepped:Connect(function()\n    ImOverlay:Text("Hello World!")\n\n    ImOverlay:Render()\nend)\n')),(0,a.kt)("p",null,"Which would result in this:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"https://github.com/JakeyWasTaken/CeiveImOverlay/blob/main/docs/assets/basic_example.png?raw=true"})),(0,a.kt)("p",null,"A more complex integration could look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local RunService = game:GetService("RunService")\nlocal CeiveImOverlay = require(...)\nlocal ImOverlay = CeiveImOverlay.new()\n\nImOverlay.BackFrame.Parent = AScreenGui\n\n-- Could be heartbeat or render stepped, doesnt really matter.\nRunService.RenderStepped:Connect(function()\n    for i = 1, 10 do\n        ImOverlay:Begin(`Recursive {i}`)\n    end\n\n    ImOverlay:Text("Im ontop of the world!")\n\n    for _ = 1, 10 do\n        ImOverlay:End()\n    end\n\n    ImOverlay:Render()\nend)\n')),(0,a.kt)("p",null,"Which would result in this:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"https://github.com/JakeyWasTaken/CeiveImOverlay/blob/main/docs/assets/complex_example.png?raw=true"})),(0,a.kt)("p",null,"Wally: ",(0,a.kt)("a",{parentName:"p",href:"https://wally.run/package/jakeywastaken/ceiveimoverlay"},"https://wally.run/package/jakeywastaken/ceiveimoverlay"),"\nReleases: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JakeyWasTaken/CeiveImOverlay/releases"},"https://github.com/JakeyWasTaken/CeiveImOverlay/releases"),"\nYou can find the demo place here: ",(0,a.kt)("a",{parentName:"p",href:"https://www.roblox.com/games/16359051355/CeiveImOverlay"},"https://www.roblox.com/games/16359051355/CeiveImOverlay")))}m.isMDXComponent=!0}}]);